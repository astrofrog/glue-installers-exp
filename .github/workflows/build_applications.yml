name: Build Applications

on:
  push:
    branches:
    - '*'
    tags:
    - '*'

jobs:
  build_applications:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, ubuntu-18.04, windows-2016]
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    # Not all dependencies work correctly on Python 3.9 on Windows yet so we use
    # Python 3.8 there.
    - name: Set up Python 3.8
      if: matrix.os == 'windows-2016'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set up Python 3.9
      if: matrix.os != 'windows-2016'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # - name: Install pyinstaller
    #   run: pip install git+https://github.com/pyinstaller/pyinstaller
    # - name: Install old version of ipykernel to avoid terminal issues
    #   run: pip install "ipykernel<6"
    # - name: Install glue
    #   run: pip install glue-core glue-vispy-viewers glue-wwt PyQt5==5.14.2 PyQtWebEngine==5.14.0
    # - name: Install plugins
    #   run: pip install git+https://github.com/glue-viz/glue-plotly git+https://github.com/jk31768/glue-statistics
    # - name: Run pyinstaller
    #   run: pyinstaller glue_app.spec


    - name: Make fake application
      if: matrix.os == 'windows-2016'
      shell: bash
      run: touch dist/glue.exe

    - name: Make fake application
      if: matrix.os == 'ubuntu-18.04'
      shell: bash
      run: touch dist/glue

    - name: Make fake application
      if: matrix.os == 'macos-10.15'
      shell: bash
      run: mkdir dist/glue.app

    - name: Uninstall lxml
      run: pip uninstall -y lxml
    - name: Prepare application for distribution
      shell: bash
      run: prepare_{$RUNNER_OS,}.sh ${GITHUB_REF##*/}
    - name: Install awscli
      run: pip install awscli
    - name: Upload to S3
      shell: bash
      run: aws s3 cp * s3://glue-installers-exp/
      working-directory: dist
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
